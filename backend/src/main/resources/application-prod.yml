# Production Environment Configuration
# Use: --spring.profiles.active=prod

spring:
  # PostgreSQL Database Configuration
  datasource:
    url: ${DATABASE_URL:jdbc:postgresql://localhost:5432/sentinel}
    username: ${DATABASE_USERNAME:postgres}
    password: ${DATABASE_PASSWORD:password}
    driver-class-name: org.postgresql.Driver
  
  # JPA Configuration for Production
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        format_sql: false
  
  # Security settings for production
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
  
  # Disable H2 console in production
  h2:
    console:
      enabled: false

  # 운영환경 Redis 설정
  redis:
    host: ${REDIS_HOST}
    port: ${REDIS_PORT:6379}
    password: ${REDIS_PASSWORD}
    ssl: ${REDIS_SSL:false}
    timeout: 5000ms

# 운영환경에서는 엄격한 API 호출 제한
stock:
  market:
    alphavantage:
      rate-limit: 5   # 무료 계정 기준
    finnhub:
      rate-limit: 60  # 무료 계정 기준

# Production logging
logging:
  level:
    root: WARN
    com.pjsent.sentinel: INFO
    org.springframework.security: WARN
  file:
    name: logs/sentinel.log
  pattern:
    file: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"

# Server settings
server:
  port: ${PORT:8080}
  servlet:
    context-path: /api
